%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 1227330239, guid: 0afa4843f495f6b4690c9bab57d33da6, type: 3}
  m_Name: RollerUnitPumpkin
  m_EditorClassIdentifier: 
  _dataSerializer:
    _serializedData: <scriptableobject version="1.0" type="RAIN.BehaviorTrees.BTAsset"><fields><field
      value="&lt;behaviortree version=&quot;1.1&quot; repeatuntil=&quot;&quot; name=&quot;RollerUnitPumpkin&quot;&gt;&lt;sequencer
      usepriorities=&quot;False&quot; repeatuntil=&quot;&quot; name=&quot;root&quot;&gt;&lt;detect
      sensor=&quot;&amp;quot;UnitEyes&amp;quot;&quot; repeatuntil=&quot;&quot; priority=&quot;&quot;
      name=&quot;Detect Hero&quot; entityobjectvariable=&quot;targetUnit&quot; aspectvariable=&quot;&quot;
      aspectobjectvariable=&quot;&quot; aspect=&quot;&amp;quot;twinhero&amp;quot;&quot;
      /&gt;&lt;sequencer usepriorities=&quot;False&quot; repeatuntil=&quot;failure&quot;
      priority=&quot;&quot; name=&quot;sequencer&quot;&gt;&lt;action repeatuntil=&quot;&quot;
      priority=&quot;&quot; parametervalues=&quot;&quot; parameters=&quot;&quot; namespace=&quot;(global)&quot;
      name=&quot;Is this alive&quot; classname=&quot;AIIsAlive&quot; /&gt;&lt;mecparam
      valueexpression=&quot;True&quot; repeatuntil=&quot;&quot; priority=&quot;&quot;
      parametertype=&quot;boolean&quot; parametername=&quot;Move&quot; name=&quot;Start
      Moving&quot; damptime=&quot;0&quot; /&gt;&lt;parallel tiebreaker=&quot;succeed&quot;
      succeed=&quot;any&quot; repeatuntil=&quot;success&quot; priority=&quot;&quot;
      name=&quot;parallel&quot; fail=&quot;all&quot;&gt;&lt;constraint repeatuntil=&quot;running&quot;
      name=&quot;constraint&quot; constraint=&quot;changeTarget&quot;&gt;&lt;sequencer
      usepriorities=&quot;False&quot; repeatuntil=&quot;&quot; name=&quot;sequencer&quot;&gt;&lt;move
      turnspeed=&quot;&quot; repeatuntil=&quot;&quot; priority=&quot;&quot; name=&quot;move&quot;
      movetarget=&quot;&quot; movespeed=&quot;&quot; facetarget=&quot;targetUnit&quot;
      closeenoughdistance=&quot;&quot; closeenoughangle=&quot;10&quot; /&gt;&lt;expression
      returnvalue=&quot;success&quot; repeatuntil=&quot;&quot; priority=&quot;&quot;
      name=&quot;expression&quot; expression=&quot;changeTarget = false&quot; /&gt;&lt;/sequencer&gt;&lt;/constraint&gt;&lt;constraint
      repeatuntil=&quot;success&quot; name=&quot;constraint&quot; constraint=&quot;newTarget
      == null || newTarget == targetUnit&quot;&gt;&lt;parallel tiebreaker=&quot;fail&quot;
      succeed=&quot;any&quot; repeatuntil=&quot;success&quot; name=&quot;parallel&quot;
      fail=&quot;all&quot;&gt;&lt;detect sensor=&quot;&amp;quot;UnitVision&amp;quot;&quot;
      repeatuntil=&quot;running&quot; name=&quot;detect&quot; entityobjectvariable=&quot;newTarget&quot;
      aspectvariable=&quot;&quot; aspectobjectvariable=&quot;&quot; aspect=&quot;&amp;quot;twinhero&amp;quot;&quot;
      /&gt;&lt;move turnspeed=&quot;&quot; repeatuntil=&quot;&quot; name=&quot;move&quot;
      movetarget=&quot;targetUnit&quot; movespeed=&quot;&quot; facetarget=&quot;targetUnit&quot;
      closeenoughdistance=&quot;7&quot; closeenoughangle=&quot;8&quot; /&gt;&lt;/parallel&gt;&lt;/constraint&gt;&lt;constraint
      repeatuntil=&quot;running&quot; name=&quot;constraint&quot; constraint=&quot;newTarget
      != null &amp;amp;&amp;amp; !changeTarget&quot;&gt;&lt;constraint repeatuntil=&quot;&quot;
      name=&quot;constraint&quot; constraint=&quot;newTarget != targetUnit&quot; /&gt;&lt;expression
      returnvalue=&quot;success&quot; repeatuntil=&quot;&quot; name=&quot;expression&quot;
      expression=&quot;targetUnit = newTarget&quot; /&gt;&lt;expression returnvalue=&quot;success&quot;
      repeatuntil=&quot;&quot; name=&quot;expression&quot; expression=&quot;newTarget
      = null&quot; /&gt;&lt;/constraint&gt;&lt;/parallel&gt;&lt;mecparam valueexpression=&quot;False&quot;
      repeatuntil=&quot;&quot; priority=&quot;&quot; parametertype=&quot;boolean&quot;
      parametername=&quot;Move&quot; name=&quot;Stop Moving&quot; damptime=&quot;0&quot;
      /&gt;&lt;action repeatuntil=&quot;&quot; priority=&quot;&quot; parametervalues=&quot;dGFyZ2V0VW5pdA==&quot;
      parameters=&quot;dGFyZ2V0&quot; namespace=&quot;(global)&quot; name=&quot;Save
      hero position&quot; classname=&quot;AISavePosition&quot; /&gt;&lt;mecparam valueexpression=&quot;true&quot;
      repeatuntil=&quot;&quot; priority=&quot;&quot; parametertype=&quot;boolean&quot;
      parametername=&quot;Attack&quot; name=&quot;Start rolling&quot; damptime=&quot;0&quot;
      /&gt;&lt;timer waitforsec=&quot;1&quot; returnvalue=&quot;success&quot; priority=&quot;&quot;
      name=&quot;Wait for animation to complete&quot; /&gt;&lt;move turnspeed=&quot;&quot;
      repeatuntil=&quot;&quot; priority=&quot;&quot; name=&quot;Fast move towards
      to saved position&quot; movetarget=&quot;targetPosition&quot; movespeed=&quot;13&quot;
      facetarget=&quot;&quot; closeenoughdistance=&quot;0.5&quot; closeenoughangle=&quot;&quot;
      /&gt;&lt;mecparam valueexpression=&quot;false&quot; repeatuntil=&quot;&quot;
      priority=&quot;&quot; parametertype=&quot;boolean&quot; parametername=&quot;Attack&quot;
      name=&quot;Stop rolling&quot; damptime=&quot;0&quot; /&gt;&lt;timer waitforsec=&quot;2&quot;
      returnvalue=&quot;success&quot; priority=&quot;&quot; name=&quot;Wait for 2
      seconds before reattacking&quot; /&gt;&lt;action repeatuntil=&quot;&quot; priority=&quot;&quot;
      parametervalues=&quot;dGFyZ2V0VW5pdA==&quot; parameters=&quot;dGFyZ2V0&quot;
      namespace=&quot;(global)&quot; name=&quot;Make sure the target's still alive&quot;
      classname=&quot;AICheckDeath&quot; /&gt;&lt;/sequencer&gt;&lt;/sequencer&gt;&lt;/behaviortree&gt;"
      type="System.String" id="treeData" /><field type="System.Array" id="treeBindings"
      elementtype="System.String" /></fields><references /></scriptableobject>
    _serializedGameObjects: []
    _serializedCustomData: []
